---
import AnimationIcon from "./AnimationIcon.astro";
---

<div class="container" id="container">
  <div class="monitor" id="monitor"></div>
  <div class="keyboard"></div>
  <div class="title absolute" id="title">Hi! I'm Yutteee!</div>
  <div class="scroll" id="scroll">Scroll</div>
  <div class="animation-button">
    <AnimationIcon />
  </div>
</div>
<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);

  const monitor = document.getElementById("monitor");
  const container = document.getElementById("container");
  const title = document.getElementById("title");

  gsap.to(monitor, {
    scrollTrigger: {
      trigger: container,
      start: "top top",
      end: "bottom top",
      scrub: 1,
      // markers: true,
      toggleActions: "play none none none",
    },
    borderRadius: "0",
    width: "100%",
    height: "100vh",
  });

  gsap.to(title, {
    scrollTrigger: {
      trigger: container,
      start: "top top",
      end: "bottom top",
      scrub: 1,
      // markers: true,
      toggleActions: "play none none none",
    },
    opacity: 0,
  });
</script>

<style>
  .container {
    height: 100vh;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: var(--color-blue);
    position: relative;
  }

  .monitor {
    aspect-ratio: 8 / 5;
    height: 20vh;
    min-height: 180px;
    background-color: var(--color-background);
    border-radius: 16px;
    border: 8px solid var(--color-background);
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 1;
  }

  .keyboard {
    width: 150px;
    border-bottom: 30px solid var(--color-background);
    border-left: 8px solid transparent;
    border-right: 8px solid transparent;
    position: fixed;
    top: calc(50% + 160px);
    left: 50%;
    transform: translate(-50%, -50%);
  }

  .absolute {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100%;
    display: flex;
    justify-content: center;
    z-index: 2;
  }

  .title {
    font-size: 96px;
    font-weight: 900;
    margin-bottom: 48px;

    @media screen and (max-width: 1000px) {
      font-size: 40px;
    }
  }

  .scroll {
    position: fixed;
    bottom: 10%;
    left: 50%;
    transform: translateX(-50%);
    letter-spacing: 0.1rem;

    /* after */
    &::after {
      content: "";
      position: absolute;
      top: 1.8rem;
      left: 50%;
      transform: translateX(-50%);
      width: 2px;
      height: 36px;
      background: var(--color-text);
      animation: pathmove 1.5s ease-in-out infinite;
      opacity: 1;
    }
  }
  @keyframes pathmove {
    0% {
      height: 20px;
      top: 1.8rem;
      opacity: 0;
    }
    30% {
      height: 36px;
      opacity: 1;
    }
    100% {
      height: 20px;
      top: calc(1.8rem + 30px);
      opacity: 0;
    }
  }

  :global(.stop) .scroll::after {
    animation-play-state: paused;
  }

  .animation-button {
    position: fixed;
    bottom: 32px;
    right: 32px;

    @media screen and (max-width: 1000px) {
      bottom: 16px;
      right: 16px;
    }
  }
</style>
